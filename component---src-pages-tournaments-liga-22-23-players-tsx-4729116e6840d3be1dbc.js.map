{"version":3,"file":"component---src-pages-tournaments-liga-22-23-players-tsx-4729116e6840d3be1dbc.js","mappings":"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","sources":["webpack://non-fungible-cup/./src/components/tournament/faq.tsx","webpack://non-fungible-cup/./src/components/tournament/players.tsx","webpack://non-fungible-cup/./src/components/utils/accordion.tsx","webpack://non-fungible-cup/./src/model/tournamentpagetype.ts","webpack://non-fungible-cup/./src/pages/tournaments/liga22-23/players.tsx","webpack://non-fungible-cup/./src/components/tournament/header.tsx","webpack://non-fungible-cup/./src/templates/tournament.tsx"],"sourcesContent":["import * as React from \"react\";\nimport Constants from \"../../utils/constants\";\nimport Accordion from '../utils/accordion';\n\nconst FAQ = () => {\n    var openSeaTxt = Constants.OPENSEA_NONFUNGIBLECUP_PROFILEURL == \"\" ? 'Opensea' : '<a href=\"' + Constants.OPENSEA_NONFUNGIBLECUP_PROFILEURL + '\">Opensea</a>';\n    var contents = [\n        { title: 'Where can I check the game rules?', content: 'There is only one rule, get your c-shirt and love the game! For general rules open <a href=\"/rules\">this page</a> and for specific Tournament\\'s rules and rewards check each Tournament page.' },\n        { title: 'How can I win ETH?', content: 'You can win ETH every time your Tournament C-shirt\\'s team scores a winning in its championship, and in many more ways, check the rules & rewards for each Tournament.' },\n        { title: 'How do I get a Tournament C-Shirts?', content: '<ul><li>You will need a <a href=\"/cshirts/\">C-Shirt</a> to take part in each Tournament private sale. There are ' + Constants.TOURNAMENT_PRIVATESALE_SPOTS + ' spots with free-mint option (1 per wallet).</li><li>We will take a snapshot of the blockchain with all the wallet addresses that owns a C-Shirt just before each Tournament\\'s private sale.</li><li>Only the wallet address visible in the snapshot will be allowed to mint in the private sale.</li><li>If you don\\t have a C-Shirt, you can get access the public sale.</li><li>If you missed the public sale, you can take a look on ' + openSeaTxt + '.</li></ul>'},\n        { title: 'How do I get C-Shirts?', content: 'You can secure a spot for yourself in the <a href=\"/premint\">whitelist</a> to enter the the private sale of ' + Constants.CSHIRTS_PRIVATESALE_SUPPLY + ' C-Shirts (free-mint), and you can mint how many C-shirt you want in the public sale.<br/>Every C-Shirt gives you lifetime access to free minting of 250 Tournament C-Shirts for each championship, gives you airdrops of new Tournament C-Shirts and voting power over what sports championship you would like to see in the next year.<br />You can get Tournament C-Shirts by private sale (free-mint) if you own a C-Shirt or public sale if you don\\'t or missed the private sale.<br />You can also find both the C-Shirts and Tournament C-Shirts on ' + openSeaTxt + '.' },\n        { title: 'I win! How can I claim my awards in ETH?', content: '<ul><li>Open <a href=\"/claim\">this page</a>, connect your wallet and withdraw your wins balance in ETH any time you want.</li><li>Keep the winning Ethers attached to your NFT and protected by the contract and increase the appeal of your NFT in the secondary market.</li>' }\n    ];\n    return (\n    <section className=\"tf-section faq\">\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-12\">\n                    <div className=\"tf-title m-b60\">\n                        <p className=\"h8 sub-title\">FAQs</p>\n                        <h4 className=\"title\">Looking for answers?</h4>\n                    </div>\n                </div>\n                <div className=\"col-md-12\">\n                    <Accordion items={contents} />\n                </div>\n            </div>\n        </div>\n    </section>\n    );\n};\n\nexport default FAQ;","import React, { useState } from 'react';\nimport CShirtsPreview from '../../components/cshirts/cshirtPreview';\nimport Select from 'react-select';\nimport SelectOption from '../../model/selectoption';\nimport PreMintMessage from '../../components/utils/premintmessage';\nimport Constants from '../../utils/constants';\n\nconst Players = ({id, datasource} : {id:string, datasource:any}) => { \n    const JSONData = datasource;\n    const [page, setPage] = useState(1);\n    const [team, setTeam] = useState([]);\n    const [number, setNumber] = useState([]);\n    const [captain, setCapitain] = useState();\n    const teams:SelectOption[] = [];\n    const numbers:SelectOption[] = [];\n    const captains:SelectOption[] = [{ value: 'Yes', label: 'Yes' }];\n\n    JSONData.cshirts.map((shirt:any) => {\n        if (!teams.find((obj:any) => obj.value === shirt.Team)) {\n            teams.push({ value: shirt.Team, label: shirt.Team });\n        }        \n    });\n    for (let i = 0; i <= 99; i++) {\n        numbers.push({ value: i.toString(), label: i.toString()});\n    }\n    teams.sort((team1, team2) => team1.value > team2.value ? 1 : -1);\n    \n    const filterShirts = (shirt: any, id: number) => {   \n        if((team.length > 0 && findValue(team, shirt.Team) == false)\n            || (number.length > 0 && findValue(number, shirt.Number) == false)\n            || (captain && captain.value && captain.value != shirt.Captain)) {\n            return false;\n        }\n        return true;        \n    }; \n    \n    function findValue(list:SelectOption[], value:string) {\n        var obj = list.find(obj => obj.value == value);\n        return obj !== undefined && obj !== null;\n    };\n\n    function isFilerNull() {\n        return (team.length == 0 && number.length == 0 && !captain);\n    };\n\n    function getData() {\n        if(isFilerNull()) {\n            return JSONData.cshirts.slice(0, page * 98);\n        }\n        return JSONData.cshirts.filter(filterShirts);\n    };\n\n    const onTeamChange = (selectedOption:any) => { \n        setTeam(selectedOption);\n    };\n    const onNumberChange = (selectedOption:any) => { \n        setNumber(selectedOption);\n    };\n    const onCaptainChange = (selectedOption:any) => { \n        setCapitain(selectedOption);\n    }; \n\n    const loadMore = () => {\n        setPage(page + 1);\n    };\n\n    const PagePreMint = <div className=\"row\">\n        <div className=\"col-md-12 center\">\n            <PreMintMessage />\n        </div>\n    </div>;\n    const PageAfterMint = <div className=\"row\">                \n        <div className=\"tournament-section-header\">\n            <h6>Browse players and staff</h6>\n        </div>\n        <div className=\"col-md-3 z-index\">\n            <div className=\"seclect-box\">\n                <Select placeholder=\"Select teams ...\" options={teams} isSearchable=\"true\" isMulti isClearable=\"true\" name=\"team\" className=\"dropdown selector-drop\" onChange={onTeamChange} value={team} />\n                <Select placeholder=\"Select numbers ...\" options={numbers} isSearchable=\"true\" isMulti isClearable=\"true\" name=\"number\" className=\"dropdown selector-drop\" onChange={onNumberChange} value={number} />\n                <Select placeholder=\"Select captain ...\" options={captains} isSearchable=\"true\" isClearable=\"true\" name=\"captain\" className=\"dropdown selector-drop\" onChange={onCaptainChange} value={captain} />                        \n            </div>\n        </div>\n        <div className=\"col-md-9\">\n            <div className=\"wrap-fx\">\n                {getData().map((shirt:any) => (\n                    <div className=\"fl-item\" key={shirt.ID}>\n                        <CShirtsPreview id={shirt.ID} url={\"/tournaments/\" + id + \"/players/\"} imgpath={\"images/\" + id + \"/72x72/\"} collection={id} />\n                    </div>\n                ))} \n            </div>\n            <div className={isFilerNull() ? 'btn-about center m-t16' : 'hide'}>\n                <a className=\"tf-button btn-effect loadmore st2\" onClick={loadMore}>   \n                    <span className=\"boder-fade\"></span>                                     \n                    <span className=\"effect\">Load More</span>\n                </a>\n            </div>\n        </div>                    \n    </div>;\n\n    return(\n        <section className=\"tf-section tf-item nopadding\">\n            <div className=\"container\">                \n                { Constants.PREMINT ? PagePreMint : PageAfterMint }\n            </div>\n        </section>\n    );\n};\n\nexport default Players;\n\n","import React, { useState, useEffect } from 'react';\n\ntype AccordionData = {\n    title: string;\n    content: string;\n};\n\nconst Accordion = ({items} : {items: Array<AccordionData>})  => {\n    const [currentId, setCurrentId] = useState(-1);\n    const onBtnClick = (id: number) => {\n        setCurrentId(id);\n    };\n    return (\n        <div className=\"flat-accordion\">\n            {items.map((item, id) => (\n                <div className={(id === currentId) ? 'flat-toggle box-text corner-box active' : 'flat-toggle box-text corner-box'} onClick={() => onBtnClick(id)} key={id}>\n                    <div className={(id === currentId) ? 'h9 toggle-title active' : 'h9 toggle-title'}>{item.title}</div>\n                    <p className={(id === currentId) ? 'toggle-content show' : 'toggle-content'} dangerouslySetInnerHTML={{__html: item.content}}>\n                    </p>\n                </div>\n            ))}            \n        </div>\n    );\n};\n\nexport default Accordion;","enum TournamentPageType {\n    Scores,\n    Rankings,\n    Players,\n    Rules\n};\n\nexport default TournamentPageType;","import * as React from \"react\";\nimport Template from '../../../templates/tournament';\nimport TournamentPageType from \"../../../model/tournamentpagetype\";\nimport Players from '../../../components/tournament/players';\nimport FAQ from \"../../../components/tournament/faq\";\nimport JSONData from '../../../assets/data/liga22-23.json';\n\nconst PlayersPage = () => {\n  return (\n    <Template id=\"liga22-23\" name=\"Liga 2022/23\" description=\"Spanish soccer tournament\" pagetype={TournamentPageType.Players}>\n        <Players id=\"liga22-23\" datasource={JSONData} />\n        <FAQ />\n    </Template>\n  )\n}\n\nexport default PlayersPage","import React from 'react';\nimport {Link} from 'gatsby';\nimport TournamentPageType from '../../model/tournamentpagetype';\n\nconst Header = ({id, pagetype} : {id:string, pagetype:TournamentPageType}) => { \n    const PageLayout = <div className=\"row\">\n            <div className=\"col-md-3 alignCenter\">\n                <Link to={'/tournaments/' + id} className={pagetype == TournamentPageType.Scores ? \"tf-button btn-effect active\" : \"tf-button btn-effect\"}>\n                    <span className=\"boder-fade\"></span>          \n                    <span className=\"effect\">Scores</span>\n                </Link> \n            </div>\n            <div className=\"col-md-3 alignCenter\">\n                <Link to={'/tournaments/' + id + '/rankings/'} className={pagetype == TournamentPageType.Rankings ? \"tf-button btn-effect active\" : \"tf-button btn-effect\"}>\n                    <span className=\"boder-fade\"></span>          \n                    <span className=\"effect\">Rankings</span>\n                </Link> \n            </div>\n            <div className=\"col-md-3 alignCenter\">\n                <Link to={'/tournaments/' + id + '/players/'} className={pagetype == TournamentPageType.Players ? \"tf-button btn-effect active\" : \"tf-button btn-effect\"}>\n                    <span className=\"boder-fade\"></span>          \n                    <span className=\"effect\">Players</span>\n                </Link> \n            </div>\n            <div className=\"col-md-3 alignCenter\">\n                <Link to={'/tournaments/' + id + '/rules/'} className={pagetype == TournamentPageType.Rules ? \"tf-button btn-effect active\" : \"tf-button btn-effect\"}>\n                    <span className=\"boder-fade\"></span>          \n                    <span className=\"effect\">Rules</span>\n                </Link> \n            </div>\n        </div>\n    return(\n        PageLayout\n    );\n};\n\nexport default Header;\n\n","import React, { useState } from 'react';\nimport Layout from '../components/layout';\nimport InnerPageTitle from '../components/utils/inner-page-title';\nimport Header from '../components/tournament/header';\nimport TournamentPage from '../model/tournamentpage';\n\nconst TournamentPageTemplate = ({id, name, description, pagetype, children} : TournamentPage) => { \n    const PageLayout = <Layout pageTitle={\"Non Fungible Cup: \" + name} container=\"inner-page\">\n        <InnerPageTitle title={name} subtitle={description} />\n        <div className=\"container tournament-header\">\n            <Header id={id} pagetype={pagetype} />\n        </div>\n        <section className=\"tf-section tf-item\">\n            <div className=\"container\">\n                {children}\n            </div>\n        </section>\n    </Layout>\n    return(\n        PageLayout\n    );\n};\n\nexport default TournamentPageTemplate;"],"names":["openSeaTxt","Constants","contents","title","content","React","className","Accordion","items","id","JSONData","datasource","useState","page","setPage","team","setTeam","number","setNumber","captain","setCapitain","teams","numbers","cshirts","map","shirt","find","obj","value","Team","push","label","i","toString","sort","team1","team2","filterShirts","length","findValue","Number","Captain","list","isFilerNull","PagePreMint","PreMintMessage","PageAfterMint","Select","placeholder","options","isSearchable","isMulti","isClearable","name","onChange","selectedOption","slice","filter","key","ID","CShirtsPreview","url","imgpath","collection","onClick","currentId","setCurrentId","item","onBtnClick","dangerouslySetInnerHTML","__html","TournamentPageType","Template","description","pagetype","Players","FAQ","Link","to","children","Layout","pageTitle","container","InnerPageTitle","subtitle","Header"],"sourceRoot":""}