{"version":3,"file":"component---src-pages-claim-tsx-420c6f89e2b05ae2355a.js","mappings":"oIAQIA,E,uFAEiB,oBAAXC,SAEPD,EAAY,IAAIE,EAAAA,EAA8BD,OAAOE,WAqFxD,UAlFkB,WACd,IAOIC,EALJ,GAA0CC,EAAAA,EAAAA,UAAS,IAA5CC,EAAP,KAAsBC,EAAtB,KACA,GAAsCF,EAAAA,EAAAA,WAAS,GAAxCG,EAAP,KAAoBC,EAApB,KACA,GAAkDJ,EAAAA,EAAAA,UAAS,IAApDK,EAAP,KAA0BC,EAA1B,KACA,GAA8BN,EAAAA,EAAAA,UAAS,IAAhCO,EAAP,UAuEA,MApEqB,oBAAXX,SAGVG,EAAa,mCAAI,4FACVH,OAAOE,SADG,0CAGHH,EAASa,KAAK,sBAAuB,IAHlC,OAAAC,OAIHC,EAASf,EAASgB,YAJfF,EAAAA,KAAAA,EAKaC,EAAOE,aALpB,OAKHC,EALG,OAMHC,EAAM,CACR,mFACA,gDACA,sEAGDD,GACCX,EAAiBW,GACjBT,GAAe,GACA,IAAIP,EAAAA,GA1BA,GA0BwCiB,EAAKJ,IAIlER,EAAiB,IAnBVO,EAAAA,KAAAA,GAAAA,MAAAA,KAAAA,GAAAA,EAAAA,KAAAA,GAAAA,EAAAA,GAAAA,EAAAA,MAAAA,GAuBTH,EAAqBG,EAAAA,GAAIM,SAvBhB,gCA2BTT,EAAqB,2BA3BZ,0DAAJ,sDA+BMU,EAAAA,cAACC,EAAAA,EAAD,CAAQC,UAAU,oCAAoCC,UAAU,cAC/EH,EAAAA,cAACI,EAAAA,EAAD,CAAgBC,MAAM,aAAaC,SAAS,2CAC5CN,EAAAA,cAAAA,UAAAA,CAASO,UAAU,+BACfP,EAAAA,cAAAA,MAAAA,CAAKO,UAAU,aACXP,EAAAA,cAAAA,MAAAA,CAAKO,UAAU,OACXP,EAAAA,cAAAA,MAAAA,CAAKO,UAAU,oBACXP,EAAAA,cAAAA,IAAAA,CAAGQ,KAAK,IAAID,UAAWpB,EAAc,OAAS,uBAAwBsB,QAAS1B,GAC3EiB,EAAAA,cAAAA,OAAAA,CAAMO,UAAU,eAChBP,EAAAA,cAAAA,OAAAA,CAAMO,UAAU,UAAhB,wBAEJP,EAAAA,cAAAA,OAAAA,KAAMA,EAAAA,cAAAA,SAAAA,KAASX,IAAkCW,EAAAA,cAAAA,KAAAA,QAGzDA,EAAAA,cAAAA,MAAAA,CAAKO,UAAWpB,EAAc,MAAQ,QAClCa,EAAAA,cAAAA,MAAAA,CAAKO,UAAU,oBACXP,EAAAA,cAAAA,KAAAA,KAAAA,iBACAA,EAAAA,cAAAA,MAAAA,CAAKO,UAAWpB,EAAc,SAAW,QAAzC,qBAAoEF,GACpEe,EAAAA,cAAAA,MAAAA,CAAKO,UAAWpB,GAAiC,GAAlBI,EAAQmB,OAAc,kBAAoB,QACrEV,EAAAA,cAAAA,MAAAA,CAAKO,UAAU,kCAAf,oCACAP,EAAAA,cAAAA,MAAAA,KACIA,EAAAA,cAACW,EAAAA,KAAD,CAAMJ,UAAU,2BAA2BK,GAAG,YAC1CZ,EAAAA,cAAAA,OAAAA,CAAMO,UAAU,eAChBP,EAAAA,cAAAA,OAAAA,CAAMO,UAAU,UAAhB,sCAIZP,EAAAA,cAAAA,MAAAA,CAAKO,UAAWpB,GAAeI,EAAQmB,OAAS,EAAI,kBAAoB","sources":["webpack://non-fungible-cup/./src/pages/claim.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport Layout from '../components/layout';\nimport InnerPageTitle from '../components/utils/inner-page-title';\nimport {Link} from 'gatsby';\nimport CShirtsABI from '../assets/contracts/cshirts.json';\nimport { ethers } from \"ethers\";\n\ndeclare var window: any;\nvar provider: any;\n\nif(typeof window !== 'undefined')\n{\n   provider =  new ethers.providers.Web3Provider(window.ethereum);\n}\n\nconst ClaimPage = () => { \n    const cshirtsContractAddress = ''; //todo: mettere l'indirizzo del contratto\n\n    const [walletAddress, setWalletAddress] = useState('');\n    const [isConnected, setIsConnected] = useState(false);\n    const [connectionMessage, setConnectionMessage] = useState('');\n    const [cshirts, setCShirts] = useState([]);\n\n    let connectWallet;\n    if(typeof window !== 'undefined')\n    {\n\n    connectWallet = (async() => {\n        if(window.ethereum) {\n          try {\n            await provider.send('eth_requestAccounts', []);\n            const signer = provider.getSigner();\n            const address = await signer.getAddress();\n            const abi = [\n                \"function mintWaitlist(bytes calldata _signature, uint256 _amount) public payable\",\n                \"function mint(uint256 _amount) public payable\",\n                \"function balanceOf(address _owner) external view returns (uint256)\"\n              ];\n            \n            if(address) {\n                setWalletAddress(address);\n                setIsConnected(true);\n                var contract = new ethers.Contract(cshirtsContractAddress, abi, signer);\n                debugger;                \n            }    \n            else {\n              setWalletAddress('');\n            }\n          } \n          catch(err) {\n            setConnectionMessage(err.message);\n          }    \n        } \n        else {\n            setConnectionMessage(\"Please install Metamask\");\n        }\n      });\n    }\n    const PageLayout = <Layout pageTitle=\"Non Fungible Cup: Claim your wins\" container=\"inner-page\">\n        <InnerPageTitle title=\"Claim wins\" subtitle=\"Connect your wallet and check you wins\" />\n        <section className=\"tf-section tf-item tf-claim\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-12 center\">\n                        <a href=\"#\" className={isConnected ? \"hide\" : \"tf-button btn-effect\"} onClick={connectWallet}>\n                            <span className=\"boder-fade\"></span>          \n                            <span className=\"effect\">Connect your wallet</span>\n                        </a> \n                        <span><strong>{connectionMessage}</strong></span><br />\n                    </div>\n                </div>  \n                <div className={isConnected ? \"row\" : \"hide\"}>\n                    <div className=\"col-md-12 center\">\n                        <h4>Your C-Shirts</h4>\n                        <div className={isConnected ? \"wallet\" : \"hide\"}>Wallet connected: {walletAddress}</div>\n                        <div className={isConnected && cshirts.length == 0 ? \"claim-container\" : \"hide\"}>\n                            <div className=\"claim-container toUpper nodata\">No C-Shirts found in your wallet</div>\n                            <div>\n                                <Link className=\"tf-button st2 btn-effect\" to=\"/cshirts\">\n                                    <span className=\"boder-fade\"></span>\n                                    <span className=\"effect\">Get a C-Shirt and start playing</span>\n                                </Link>\n                            </div>\n                        </div>\n                        <div className={isConnected && cshirts.length > 0 ? \"claim-container\" : \"hide\"}>\n                            \n                        </div>\n                    </div>\n                </div>              \n            </div>\n        </section>\n    </Layout>\n    return(\n        PageLayout\n    );\n};\n\nexport default ClaimPage;"],"names":["provider","window","ethers","ethereum","connectWallet","useState","walletAddress","setWalletAddress","isConnected","setIsConnected","connectionMessage","setConnectionMessage","cshirts","send","_context","signer","getSigner","getAddress","address","abi","message","React","Layout","pageTitle","container","InnerPageTitle","title","subtitle","className","href","onClick","length","Link","to"],"sourceRoot":""}