{"version":3,"file":"component---src-pages-tournaments-serie-a-22-23-rules-tsx-e804a54667fe48b3ae85.js","mappings":"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","sources":["webpack://non-fungible-cup/./src/components/tournament/faq.tsx","webpack://non-fungible-cup/./src/components/utils/accordion.tsx","webpack://non-fungible-cup/./src/components/utils/inner-page-title.tsx","webpack://non-fungible-cup/./src/model/tournamentpagetype.ts","webpack://non-fungible-cup/./src/pages/tournaments/serieA22-23/rules.tsx","webpack://non-fungible-cup/./src/components/tournament/header.tsx","webpack://non-fungible-cup/./src/templates/tournament.tsx","webpack://non-fungible-cup/./src/assets/images/rewards-scheme.png"],"sourcesContent":["import * as React from \"react\";\nimport Constants from \"../../utils/constants\";\nimport Accordion from '../utils/accordion';\n\nconst FAQ = () => {\n    var openSeaTxt = Constants.OPENSEA_NONFUNGIBLECUP_PROFILEURL == \"\" ? 'Opensea' : '<a href=\"' + Constants.OPENSEA_NONFUNGIBLECUP_PROFILEURL + '\">Opensea</a>';\n    var contents = [\n        { title: 'Where can I check the game rules?', content: 'There is only one rule, get your c-shirt and love the game! For general rules open <a href=\"/rules\">this page</a> and for specific Tournament\\'s rules and rewards check each Tournament page.' },\n        { title: 'How can I win ETH?', content: 'You can win ETH every time your Tournament C-shirt\\'s team scores a winning in its championship, and in many more ways, check the rules & rewards for each Tournament.' },\n        { title: 'How do I get a Tournament C-Shirts?', content: '<ul><li>You will need a <a href=\"/cshirts/\">C-Shirt</a> to take part in each Tournament private sale. There are ' + Constants.TOURNAMENT_PRIVATESALE_SPOTS + ' spots with free-mint option (1 per wallet).</li><li>We will take a snapshot of the blockchain with all the wallet addresses that owns a C-Shirt just before each Tournament\\'s private sale.</li><li>Only the wallet address visible in the snapshot will be allowed to mint in the private sale.</li><li>If you don\\t have a C-Shirt, you can get access the public sale.</li><li>If you missed the public sale, you can take a look on ' + openSeaTxt + '.</li></ul>'},\n        { title: 'How do I get C-Shirts?', content: 'You can secure a spot for yourself in the <a href=\"/premint\">whitelist</a> to enter the the private sale of ' + Constants.CSHIRTS_PRIVATESALE_SUPPLY + ' C-Shirts (free-mint), and you can mint how many C-shirt you want in the public sale.<br/>Every C-Shirt gives you lifetime access to free minting of 250 Tournament C-Shirts for each championship, gives you airdrops of new Tournament C-Shirts and voting power over what sports championship you would like to see in the next year.<br />You can get Tournament C-Shirts by private sale (free-mint) if you own a C-Shirt or public sale if you don\\'t or missed the private sale.<br />You can also find both the C-Shirts and Tournament C-Shirts on ' + openSeaTxt + '.' },\n        { title: 'I win! How can I claim my awards in ETH?', content: '<ul><li>Open <a href=\"/claim\">this page</a>, connect your wallet and withdraw your wins balance in ETH any time you want.</li><li>Keep the winning Ethers attached to your NFT and protected by the contract and increase the appeal of your NFT in the secondary market.</li>' }\n    ];\n    return (\n    <section className=\"tf-section faq\">\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-12\">\n                    <div className=\"tf-title m-b60\">\n                        <p className=\"h8 sub-title\">FAQs</p>\n                        <h4 className=\"title\">Looking for answers?</h4>\n                    </div>\n                </div>\n                <div className=\"col-md-12\">\n                    <Accordion items={contents} />\n                </div>\n            </div>\n        </div>\n    </section>\n    );\n};\n\nexport default FAQ;","import React, { useState, useEffect } from 'react';\n\ntype AccordionData = {\n    title: string;\n    content: string;\n};\n\nconst Accordion = ({items} : {items: Array<AccordionData>})  => {\n    const [currentId, setCurrentId] = useState(-1);\n    const onBtnClick = (id: number) => {\n        setCurrentId(id);\n    };\n    return (\n        <div className=\"flat-accordion\">\n            {items.map((item, id) => (\n                <div className={(id === currentId) ? 'flat-toggle box-text corner-box active' : 'flat-toggle box-text corner-box'} onClick={() => onBtnClick(id)} key={id}>\n                    <div className={(id === currentId) ? 'h9 toggle-title active' : 'h9 toggle-title'}>{item.title}</div>\n                    <p className={(id === currentId) ? 'toggle-content show' : 'toggle-content'} dangerouslySetInnerHTML={{__html: item.content}}>\n                    </p>\n                </div>\n            ))}            \n        </div>\n    );\n};\n\nexport default Accordion;","import * as React from \"react\";\n\nconst InnerPageTitle = ({title, subtitle} : {title: string, subtitle: string})  => {\n    return (\n        <section className=\"page-title\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <div className=\"breadcrumbs\">\n                            <h3>{title}</h3>\n                            <p className=\"sub-title\">{subtitle}</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n    );\n};\n\nexport default InnerPageTitle;\n","enum TournamentPageType {\n    Scores,\n    Rankings,\n    Players,\n    Rules\n};\n\nexport default TournamentPageType;","import * as React from \"react\";\nimport Template from \"../../../templates/tournament\";\nimport TournamentPageType from \"../../../model/tournamentpagetype\";\nimport FAQ from \"../../../components/tournament/faq\";\nimport Constants from \"../../../utils/constants\";\nimport RewardsSchemeImages from \"../../../assets/images/rewards-scheme.png\";\n\nconst RulesPage = () => {\n    const CheckContractLink = Constants.SERIEA22_CONTRACTADDRESS == \"\" ? null : <a href={Constants.SCAN_CONTRACT_URL + Constants.SERIEA22_CONTRACTADDRESS}>Check the contract</a>;\n  return (\n    <Template id=\"serieA22-23\" name=\"Serie A 2022/23\" description=\"Italian soccer tournament\" pagetype={TournamentPageType.Rules}>\n        <div className=\"container\">\n            <div className=\"tournament-section-header\">\n                <h6>Rules &amp; rewards</h6>\n                Rewards are set as {Constants.TOURNAMENT_GAMIFICATION_PERC}% of the total Tournament C-shirt minting revenue and are distributed as below:\n            </div>\n            <div className=\"left tournament-rules-text\">\n                <div className=\"row\">\n                    <div className=\"col-md-6 col-lg-6\">\n                        <img src={RewardsSchemeImages} />\n                    </div>\n                    <div className=\"col-md-6 col-lg-6\">\n                        <strong>TOTAL MINTED AMOUNT WILL BE DIVIDED IN:</strong>\n                        <ul>                            \n                            <li><h4>30%</h4> of the minted amount, for the developers</li>\n                            <li><h4>60%</h4> of the minted amount, for all match wins (to be divided for every match, and for each team's player)</li>\n                            <li><h4>10%</h4> of the mintend amount, for special prizes, divided as below:</li>\n                        </ul>\n                        <div style={{clear: \"both\"}}></div>\n                        <strong>SPECIAL PRIZES</strong>\n                        <ul>\n                            <li><h4>80%</h4> of the special prizes, for the championship winning team (to be divided for each team's players)</li>\n                            <li><h4>16%</h4> of the special prizes, for the Top Scorer</li>\n                            <li><h4>2%</h4> of the special prizes, for the Assist-man</li> \n                            <li><h4>2%</h4> of the special prizes, for the captain of the championship winning team</li>                    \n                        </ul>\n                        <div style={{clear: \"both\"}}></div> \n                    </div>\n                </div>\n            </div>\n            <div className=\"row\">                \n                <div className=\"col-md-12 center\"> \n                </div>\n            </div>\n        </div>\n        <FAQ />\n    </Template>\n  )\n}\n\nexport default RulesPage","import React from 'react';\nimport {Link} from 'gatsby';\nimport TournamentPageType from '../../model/tournamentpagetype';\n\nconst Header = ({id, pagetype} : {id:string, pagetype:TournamentPageType}) => { \n    const PageLayout = <div className=\"row\">\n            <div className=\"col-md-3 alignCenter\">\n                <Link to={'/tournaments/' + id} className={pagetype == TournamentPageType.Scores ? \"tf-button btn-effect active\" : \"tf-button btn-effect\"}>\n                    <span className=\"boder-fade\"></span>          \n                    <span className=\"effect\">Scores</span>\n                </Link> \n            </div>\n            <div className=\"col-md-3 alignCenter\">\n                <Link to={'/tournaments/' + id + '/rankings/'} className={pagetype == TournamentPageType.Rankings ? \"tf-button btn-effect active\" : \"tf-button btn-effect\"}>\n                    <span className=\"boder-fade\"></span>          \n                    <span className=\"effect\">Rankings</span>\n                </Link> \n            </div>\n            <div className=\"col-md-3 alignCenter\">\n                <Link to={'/tournaments/' + id + '/players/'} className={pagetype == TournamentPageType.Players ? \"tf-button btn-effect active\" : \"tf-button btn-effect\"}>\n                    <span className=\"boder-fade\"></span>          \n                    <span className=\"effect\">Players</span>\n                </Link> \n            </div>\n            <div className=\"col-md-3 alignCenter\">\n                <Link to={'/tournaments/' + id + '/rules/'} className={pagetype == TournamentPageType.Rules ? \"tf-button btn-effect active\" : \"tf-button btn-effect\"}>\n                    <span className=\"boder-fade\"></span>          \n                    <span className=\"effect\">Rules</span>\n                </Link> \n            </div>\n        </div>\n    return(\n        PageLayout\n    );\n};\n\nexport default Header;\n\n","import React, { useState } from 'react';\nimport Layout from '../components/layout';\nimport InnerPageTitle from '../components/utils/inner-page-title';\nimport Header from '../components/tournament/header';\nimport TournamentPage from '../model/tournamentpage';\n\nconst TournamentPageTemplate = ({id, name, description, pagetype, children} : TournamentPage) => { \n    const PageLayout = <Layout pageTitle={\"Non Fungible Cup: \" + name} container=\"inner-page\">\n        <InnerPageTitle title={name} subtitle={description} />\n        <div className=\"container tournament-header\">\n            <Header id={id} pagetype={pagetype} />\n        </div>\n        <section className=\"tf-section tf-item\">\n            <div className=\"container\">\n                {children}\n            </div>\n        </section>\n    </Layout>\n    return(\n        PageLayout\n    );\n};\n\nexport default TournamentPageTemplate;","export default __webpack_public_path__ + \"static/rewards-scheme-d7a6d20b9ef133aac07e2151666e5288.png\";"],"names":["openSeaTxt","Constants","contents","title","content","React","className","Accordion","items","useState","currentId","setCurrentId","map","item","id","onClick","onBtnClick","key","dangerouslySetInnerHTML","__html","subtitle","TournamentPageType","Template","name","description","pagetype","src","RewardsSchemeImages","style","clear","FAQ","Link","to","children","Layout","pageTitle","container","InnerPageTitle","Header"],"sourceRoot":""}