{"version":3,"file":"component---src-pages-tournaments-nhl-22-23-rankings-tsx-1d7f411d6bc3bc1f30a6.js","mappings":"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","sources":["webpack://non-fungible-cup/./src/components/tournament/faq.tsx","webpack://non-fungible-cup/./src/components/tournament/rankings.tsx","webpack://non-fungible-cup/./src/components/utils/accordion.tsx","webpack://non-fungible-cup/./src/components/utils/inner-page-title.tsx","webpack://non-fungible-cup/./src/model/tournamentpagetype.ts","webpack://non-fungible-cup/./src/pages/tournaments/nhl22-23/rankings.tsx","webpack://non-fungible-cup/./src/components/tournament/header.tsx","webpack://non-fungible-cup/./src/templates/tournament.tsx"],"sourcesContent":["import * as React from \"react\";\nimport Accordion from '../utils/accordion';\n\nconst FAQ = () => {\n    var contents = [\n        { title: 'Where can I get the game rules?', content: 'Click on \"Rules\" in the top menu.' },\n        { title: 'How can I earn ETH on a match?', content: 'Get a C-Shirts for this tournament.' },\n        { title: 'How do I get C-Shirts?', content: 'From this website, if minting is open, or from Opensea.' },\n        { title: 'I win! How can I get my award in ETH?', content: 'Click on \"Claim wins\" in the top menu.' }\n    ];\n    return (\n    <section className=\"tf-section faq\">\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-12\">\n                    <div className=\"tf-title m-b60\">\n                        <p className=\"h8 sub-title\">FAQs</p>\n                        <h4 className=\"title\">Looking for answers?</h4>\n                    </div>\n                </div>\n                <div className=\"col-md-12\">\n                    <Accordion items={contents} />\n                </div>\n            </div>\n        </div>\n    </section>\n    );\n};\n\nexport default FAQ;","import React, { useState } from 'react';\nimport {Link} from 'gatsby';\n\nconst Rankings = ({id, datasource} : {id:string, datasource:any}) => { \n    const JSONData = datasource;\n\n    const PageLayout = <section className=\"tf-section tf-item nopadding\">\n        <div className=\"container\">\n            <div className=\"tournament-section-header\">\n                <h6>Game stats</h6>\n            </div>\n            <div className=\"row\">                \n                <div className=\"col-md-4\">\n                    <div className=\"rankingCol\">\n                        <div className=\"center\"><h5>Teams ranking</h5></div>      \n                        <div className=\"ranking\">\n                            {JSONData.rankings.teams.sort((team1:any, team2:any)=> team1.points < team2.points ? 1 : -1).map((team:any) => (\n                                <div className=\"row\" key={\"TeamRank\" + team.name}>\n                                    <div className=\"col-md-10 col-10\">\n                                        {team.name}\n                                    </div>\n                                    <div className=\"col-md-2 col-2\">\n                                        {team.points}\n                                    </div>\n                                </div>\n                            ))}\n                            <div className={JSONData.rankings.teams.length != 0 ? \"hide\": \"\"}>No data available</div>\n                        </div> \n                    </div>             \n                </div>\n                <div className=\"col-md-4\">\n                    <div className=\"rankingCol\">\n                        <div className=\"center\"><h5>Top scorers</h5></div>\n                        <div className=\"ranking\">\n                            {JSONData.rankings.topscorers.sort((p1:any, p2:any)=> p1.points < p2.points ? 1 : -1).map((player:any) => (\n                                <div className=\"row\" key={\"Scorer\" + player.cshirt}>\n                                    <div className=\"col-md-10 col-10\">\n                                        <Link to={'../players/' + player.cshirt}>C-Shirt #{player.cshirt}</Link>\n                                    </div>\n                                    <div className=\"col-md-2 col-2\">\n                                        {player.points}\n                                    </div>\n                                </div>\n                            ))}\n                            <div className={JSONData.rankings.topscorers.length != 0 ? \"hide\": \"\"}>No data available</div>\n                        </div>  \n                    </div>            \n                </div>\n                <div className=\"col-md-4\">\n                    <div className=\"rankingCol\">\n                        <div className=\"center\"><h5>Top assistmen</h5></div>\n                        <div className=\"ranking\">\n                            {JSONData.rankings.assistmen.sort((a1:any, a2:any)=> a1.assists < a2.assists ? 1 : -1).map((player:any) => (\n                                <div className=\"row\" key={\"Assistman\" + player.cshirt}>\n                                    <div className=\"col-md-10 col-10\">\n                                        <Link to={'../players/' + player.cshirt}>C-Shirt #{player.cshirt}</Link>\n                                    </div>\n                                    <div className=\"col-md-2 col-2\">\n                                        {player.assists}\n                                    </div>\n                                </div>\n                            ))}\n                            <div className={JSONData.rankings.assistmen.length != 0 ? \"hide\": \"\"}>No data available</div>\n                        </div>    \n                    </div>          \n                </div>\n            </div>\n        </div>\n    </section>\n    return(\n        PageLayout\n    );\n};\n\nexport default Rankings;\n\n","import React, { useState, useEffect } from 'react';\n\ntype AccordionData = {\n    title: string;\n    content: string;\n};\n\nconst Accordion = ({items} : {items: Array<AccordionData>})  => {\n    const [currentId, setCurrentId] = useState(-1);\n    const onBtnClick = (id: number) => {\n        setCurrentId(id);\n    };\n    return (\n        <div className=\"flat-accordion\">\n            {items.map((item, id) => (\n                <div className={(id === currentId) ? 'flat-toggle box-text corner-box active' : 'flat-toggle box-text corner-box'} onClick={() => onBtnClick(id)} key={id}>\n                    <div className={(id === currentId) ? 'h9 toggle-title active' : 'h9 toggle-title'}>{item.title}</div>\n                    <p className={(id === currentId) ? 'toggle-content show' : 'toggle-content'}>\n                        {item.content}\n                    </p>\n                </div>\n            ))}            \n        </div>\n    );\n};\n\nexport default Accordion;","import * as React from \"react\";\n\nconst InnerPageTitle = ({title, subtitle} : {title: string, subtitle: string})  => {\n    return (\n        <section className=\"page-title\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <div className=\"breadcrumbs\">\n                            <h3>{title}</h3>\n                            <p className=\"sub-title\">{subtitle}</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n    );\n};\n\nexport default InnerPageTitle;\n","enum TournamentPageType {\n    Scores,\n    Rankings,\n    Players\n};\n\nexport default TournamentPageType;","import * as React from \"react\";\nimport Template from \"../../../templates/tournament\";\nimport TournamentPageType from \"../../../model/tournamentpagetype\";\nimport Rankings from \"../../../components/tournament/rankings\";\nimport FAQ from \"../../../components/tournament/faq\";\nimport JSONData from \"../../../assets/data/scores/nhl22-23.json\";\n\nconst RankingsPage = () => {\n  return (\n    <Template id=\"nhl22-23\" name=\"NHL 2022/23\" description=\"American hockey tournament\" pagetype={TournamentPageType.Rankings}>\n      <Rankings id=\"nhl22-23\" datasource={JSONData} />\n      <FAQ />\n    </Template>\n  )\n}\n\nexport default RankingsPage","import React from 'react';\nimport {Link} from 'gatsby';\nimport TournamentPageType from '../../model/tournamentpagetype';\n\nconst Header = ({id, pagetype} : {id:string, pagetype:TournamentPageType}) => { \n    const PageLayout = <div className=\"row\">\n            <div className=\"col-md-4 alignCenter\">\n                <Link to={'/tournaments/' + id} className={pagetype == TournamentPageType.Scores ? \"tf-button btn-effect active\" : \"tf-button btn-effect\"}>\n                    <span className=\"boder-fade\"></span>          \n                    <span className=\"effect\">Scores</span>\n                </Link> \n            </div>\n            <div className=\"col-md-4 alignCenter\">\n                <Link to={'/tournaments/' + id + '/rankings/'} className={pagetype == TournamentPageType.Rankings ? \"tf-button btn-effect active\" : \"tf-button btn-effect\"}>\n                    <span className=\"boder-fade\"></span>          \n                    <span className=\"effect\">Rankings</span>\n                </Link> \n            </div>\n            <div className=\"col-md-4 alignCenter\">\n                <Link to={'/tournaments/' + id + '/players/'} className={pagetype == TournamentPageType.Players ? \"tf-button btn-effect active\" : \"tf-button btn-effect\"}>\n                    <span className=\"boder-fade\"></span>          \n                    <span className=\"effect\">Players</span>\n                </Link> \n            </div>\n        </div>\n    return(\n        PageLayout\n    );\n};\n\nexport default Header;\n\n","import React, { useState } from 'react';\nimport Layout from '../components/layout';\nimport InnerPageTitle from '../components/utils/inner-page-title';\nimport Header from '../components/tournament/header';\nimport TournamentPage from '../model/tournamentpage';\n\nconst TournamentPageTemplate = ({id, name, description, pagetype, children} : TournamentPage) => { \n    const PageLayout = <Layout pageTitle={\"Non Fungible Cup: \" + name} container=\"inner-page\">\n        <InnerPageTitle title={name} subtitle={description} />\n        <section className=\"tf-section tf-item\">\n            <div className=\"container\">\n                <Header id={id} pagetype={pagetype} />\n            </div>\n        </section>\n        <section className=\"tf-section tf-item\">\n            <div className=\"container\">\n                {children}\n            </div>\n        </section>\n    </Layout>\n    return(\n        PageLayout\n    );\n};\n\nexport default TournamentPageTemplate;"],"names":["React","className","Accordion","items","title","content","id","JSONData","datasource","rankings","teams","sort","team1","team2","points","map","team","key","name","length","topscorers","p1","p2","player","cshirt","Link","to","assistmen","a1","a2","assists","useState","currentId","setCurrentId","item","onClick","onBtnClick","subtitle","TournamentPageType","Template","description","pagetype","Rankings","FAQ","children","Layout","pageTitle","container","InnerPageTitle","Header"],"sourceRoot":""}