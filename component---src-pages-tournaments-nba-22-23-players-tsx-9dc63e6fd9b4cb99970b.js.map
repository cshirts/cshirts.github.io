{"version":3,"file":"component---src-pages-tournaments-nba-22-23-players-tsx-9dc63e6fd9b4cb99970b.js","mappings":"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","sources":["webpack://non-fungible-cup/./src/components/tournament/faq.tsx","webpack://non-fungible-cup/./src/components/tournament/players.tsx","webpack://non-fungible-cup/./src/components/utils/accordion.tsx","webpack://non-fungible-cup/./src/model/tournamentpagetype.ts","webpack://non-fungible-cup/./src/pages/tournaments/nba22-23/players.tsx","webpack://non-fungible-cup/./src/components/tournament/header.tsx","webpack://non-fungible-cup/./src/templates/tournament.tsx"],"sourcesContent":["import * as React from \"react\";\nimport Accordion from '../utils/accordion';\n\nconst FAQ = () => {\n    var contents = [\n        { title: 'Where can I get the game rules?', content: 'Click on \"Rules\" in the top menu.' },\n        { title: 'How can I earn ETH on a match?', content: 'Get a C-Shirts for this tournament.' },\n        { title: 'How do I get C-Shirts?', content: 'From this website, if minting is open, or from Opensea.' },\n        { title: 'I win! How can I get my award in ETH?', content: 'Click on \"Claim wins\" in the top menu.' }\n    ];\n    return (\n    <section className=\"tf-section faq\">\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-12\">\n                    <div className=\"tf-title m-b60\">\n                        <p className=\"h8 sub-title\">FAQs</p>\n                        <h4 className=\"title\">Looking for answers?</h4>\n                    </div>\n                </div>\n                <div className=\"col-md-12\">\n                    <Accordion items={contents} />\n                </div>\n            </div>\n        </div>\n    </section>\n    );\n};\n\nexport default FAQ;","import React, { useState } from 'react';\nimport CShirtsPreview from '../../components/cshirts/cshirtPreview';\nimport Select from 'react-select';\nimport SelectOption from '../../model/selectoption';\nimport PreMintMessage from '../../components/utils/premintmessage';\nimport Constants from '../../utils/constants';\n\nconst Players = ({id, datasource} : {id:string, datasource:any}) => { \n    const JSONData = datasource;\n    const [page, setPage] = useState(1);\n    const [team, setTeam] = useState([]);\n    const [number, setNumber] = useState([]);\n    const [captain, setCapitain] = useState();\n    const teams:SelectOption[] = [];\n    const numbers:SelectOption[] = [];\n    const captains:SelectOption[] = [{ value: 'Yes', label: 'Yes' }];\n\n    JSONData.cshirts.map((shirt:any) => {\n        if (!teams.find((obj:any) => obj.value === shirt.Team)) {\n            teams.push({ value: shirt.Team, label: shirt.Team });\n        }        \n    });\n    for (let i = 0; i <= 99; i++) {\n        numbers.push({ value: i.toString(), label: i.toString()});\n    }\n    teams.sort((team1, team2) => team1.value > team2.value ? 1 : -1);\n    \n    const filterShirts = (shirt: any, id: number) => {   \n        if((team.length > 0 && findValue(team, shirt.Team) == false)\n            || (number.length > 0 && findValue(number, shirt.Number) == false)\n            || (captain && captain.value && captain.value != shirt.Captain)) {\n            return false;\n        }\n        return true;        \n    }; \n    \n    function findValue(list:SelectOption[], value:string) {\n        var obj = list.find(obj => obj.value == value);\n        return obj !== undefined && obj !== null;\n    };\n\n    function isFilerNull() {\n        return (team.length == 0 && number.length == 0 && !captain);\n    };\n\n    function getData() {\n        if(isFilerNull()) {\n            return JSONData.cshirts.slice(0, page * 98);\n        }\n        return JSONData.cshirts.filter(filterShirts);\n    };\n\n    const onTeamChange = (selectedOption:any) => { \n        setTeam(selectedOption);\n    };\n    const onNumberChange = (selectedOption:any) => { \n        setNumber(selectedOption);\n    };\n    const onCaptainChange = (selectedOption:any) => { \n        setCapitain(selectedOption);\n    }; \n\n    const loadMore = () => {\n        setPage(page + 1);\n    };\n\n    const PagePreMint = <div className=\"row\">\n        <div className=\"col-md-12 center\">\n            <PreMintMessage />\n        </div>\n    </div>;\n    const PageAfterMint = <div className=\"row\">                \n        <div className=\"tournament-section-header\">\n            <h6>Browse players and staff</h6>\n        </div>\n        <div className=\"col-md-3 z-index\">\n            <div className=\"seclect-box\">\n                <Select placeholder=\"Select teams ...\" options={teams} isSearchable=\"true\" isMulti isClearable=\"true\" name=\"team\" className=\"dropdown selector-drop\" onChange={onTeamChange} value={team} />\n                <Select placeholder=\"Select numbers ...\" options={numbers} isSearchable=\"true\" isMulti isClearable=\"true\" name=\"number\" className=\"dropdown selector-drop\" onChange={onNumberChange} value={number} />\n                <Select placeholder=\"Select captain ...\" options={captains} isSearchable=\"true\" isClearable=\"true\" name=\"captain\" className=\"dropdown selector-drop\" onChange={onCaptainChange} value={captain} />                        \n            </div>\n        </div>\n        <div className=\"col-md-9\">\n            <div className=\"wrap-fx\">\n                {getData().map((shirt:any) => (\n                    <div className=\"fl-item\" key={shirt.ID}>\n                        <CShirtsPreview id={shirt.ID} url={\"/tournaments/\" + id + \"/players/\"} imgpath={\"images/\" + id + \"/72x72/\"} collection={id} />\n                    </div>\n                ))} \n            </div>\n            <div className={isFilerNull() ? 'btn-about center m-t16' : 'hide'}>\n                <a className=\"tf-button btn-effect loadmore st2\" onClick={loadMore}>   \n                    <span className=\"boder-fade\"></span>                                     \n                    <span className=\"effect\">Load More</span>\n                </a>\n            </div>\n        </div>                    \n    </div>;\n\n    return(\n        <section className=\"tf-section tf-item nopadding\">\n            <div className=\"container\">                \n                { Constants.PREMINT ? PagePreMint : PageAfterMint }\n            </div>\n        </section>\n    );\n};\n\nexport default Players;\n\n","import React, { useState, useEffect } from 'react';\n\ntype AccordionData = {\n    title: string;\n    content: string;\n};\n\nconst Accordion = ({items} : {items: Array<AccordionData>})  => {\n    const [currentId, setCurrentId] = useState(-1);\n    const onBtnClick = (id: number) => {\n        setCurrentId(id);\n    };\n    return (\n        <div className=\"flat-accordion\">\n            {items.map((item, id) => (\n                <div className={(id === currentId) ? 'flat-toggle box-text corner-box active' : 'flat-toggle box-text corner-box'} onClick={() => onBtnClick(id)} key={id}>\n                    <div className={(id === currentId) ? 'h9 toggle-title active' : 'h9 toggle-title'}>{item.title}</div>\n                    <p className={(id === currentId) ? 'toggle-content show' : 'toggle-content'}>\n                        {item.content}\n                    </p>\n                </div>\n            ))}            \n        </div>\n    );\n};\n\nexport default Accordion;","enum TournamentPageType {\n    Scores,\n    Rankings,\n    Players\n};\n\nexport default TournamentPageType;","import * as React from \"react\";\nimport Template from '../../../templates/tournament';\nimport TournamentPageType from \"../../../model/tournamentpagetype\";\nimport Players from '../../../components/tournament/players';\nimport FAQ from \"../../../components/tournament/faq\";\nimport JSONData from '../../../assets/data/nba22-23.json';\n\nconst PlayersPage = () => {\n  return (\n    <Template id=\"nba22-23\" name=\"NBA 2022/23\" description=\"American basketball tournament\" pagetype={TournamentPageType.Players}>\n        <Players id=\"nba22-23\" datasource={JSONData} />\n        <FAQ />\n    </Template>\n  )\n}\n\nexport default PlayersPage","import React from 'react';\nimport {Link} from 'gatsby';\nimport TournamentPageType from '../../model/tournamentpagetype';\n\nconst Header = ({id, pagetype} : {id:string, pagetype:TournamentPageType}) => { \n    const PageLayout = <div className=\"row\">\n            <div className=\"col-md-4 alignCenter\">\n                <Link to={'/tournaments/' + id} className={pagetype == TournamentPageType.Scores ? \"tf-button btn-effect active\" : \"tf-button btn-effect\"}>\n                    <span className=\"boder-fade\"></span>          \n                    <span className=\"effect\">Scores</span>\n                </Link> \n            </div>\n            <div className=\"col-md-4 alignCenter\">\n                <Link to={'/tournaments/' + id + '/rankings/'} className={pagetype == TournamentPageType.Rankings ? \"tf-button btn-effect active\" : \"tf-button btn-effect\"}>\n                    <span className=\"boder-fade\"></span>          \n                    <span className=\"effect\">Rankings</span>\n                </Link> \n            </div>\n            <div className=\"col-md-4 alignCenter\">\n                <Link to={'/tournaments/' + id + '/players/'} className={pagetype == TournamentPageType.Players ? \"tf-button btn-effect active\" : \"tf-button btn-effect\"}>\n                    <span className=\"boder-fade\"></span>          \n                    <span className=\"effect\">Players</span>\n                </Link> \n            </div>\n        </div>\n    return(\n        PageLayout\n    );\n};\n\nexport default Header;\n\n","import React, { useState } from 'react';\nimport Layout from '../components/layout';\nimport InnerPageTitle from '../components/utils/inner-page-title';\nimport Header from '../components/tournament/header';\nimport TournamentPage from '../model/tournamentpage';\n\nconst TournamentPageTemplate = ({id, name, description, pagetype, children} : TournamentPage) => { \n    const PageLayout = <Layout pageTitle={\"Non Fungible Cup: \" + name} container=\"inner-page\">\n        <InnerPageTitle title={name} subtitle={description} />\n        <section className=\"tf-section tf-item\">\n            <div className=\"container\">\n                <Header id={id} pagetype={pagetype} />\n            </div>\n        </section>\n        <section className=\"tf-section tf-item\">\n            <div className=\"container\">\n                {children}\n            </div>\n        </section>\n    </Layout>\n    return(\n        PageLayout\n    );\n};\n\nexport default TournamentPageTemplate;"],"names":["React","className","Accordion","items","title","content","id","JSONData","datasource","useState","page","setPage","team","setTeam","number","setNumber","captain","setCapitain","teams","numbers","cshirts","map","shirt","find","obj","value","Team","push","label","i","toString","sort","team1","team2","filterShirts","length","findValue","Number","Captain","list","isFilerNull","PagePreMint","PreMintMessage","PageAfterMint","Select","placeholder","options","isSearchable","isMulti","isClearable","name","onChange","selectedOption","slice","filter","key","ID","CShirtsPreview","url","imgpath","collection","onClick","Constants","currentId","setCurrentId","item","onBtnClick","TournamentPageType","Template","description","pagetype","Players","FAQ","Link","to","children","Layout","pageTitle","container","InnerPageTitle","subtitle","Header"],"sourceRoot":""}