{"version":3,"file":"component---src-pages-claim-tsx-b48661b84361a7301af0.js","mappings":"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","sources":["webpack://non-fungible-cup/./src/pages/claim.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport Layout from '../components/layout';\nimport InnerPageTitle from '../components/utils/inner-page-title';\nimport {Link} from 'gatsby';\nimport { ethers } from \"ethers\";\nimport MetamaskIcon from '../assets/images/metamask.png';\nimport Constants from '../utils/constants';\n\ndeclare var window: any;\nvar provider: any;\nvar mobile: boolean;\n\nif(typeof window !== 'undefined' && window.ethereum) {\n   provider =  new ethers.providers.Web3Provider(window.ethereum);\n}\nif(typeof window !== 'undefined') {\n    var match = window.matchMedia(\"(max-width: 991px)\");\n    mobile = match.matches;\n    match.addListener(() => {\n        mobile = match.matches;\n    });\n}\n\nconst ClaimPage = () => { \n    const [walletAddress, setWalletAddress] = useState('');\n    const [isConnected, setIsConnected] = useState(false);\n    const [connectionMessage, setConnectionMessage] = useState('');\n    const [cshirts, setCShirts] = useState([]);\n\n\n    const isWindowEth = () => {\n        if(typeof window !== 'undefined')\n        {\n            return (window.ethereum !== 'undefined')\n\n        }\n        return false\n\n    };\n\n    \n    let connectWallet;\n    if(typeof window !== 'undefined')\n    {\n        connectWallet = (async() => {\n            if(window.ethereum) {\n            try {\n                await provider.send('eth_requestAccounts', []);\n                const signer = provider.getSigner();\n                const address = await signer.getAddress();      \n                if(address) {\n                    setWalletAddress(address);\n                    setIsConnected(true);\n                    const tokens:string[] = [Constants.CSHIRTS_CONTRACTADDRESS]\n                    const contract = new ethers.Contract(Constants.CSHIRTS_CONTRACTADDRESS, Constants.CSHIRTS_CONTRACTABI, signer); \n                    //const balances = await contract.balances([address], tokens);     \n                    debugger;        \n                }    \n                else {\n                setWalletAddress('');\n                }\n            } \n            catch(err) {\n                setConnectionMessage(err.message);\n            }    \n            } \n            else {\n                setConnectionMessage(\"Please install Metamask\");\n            }\n        });\n    }\n    const PageLayout = <Layout pageTitle=\"Non Fungible Cup: Claim your wins\" container=\"inner-page\">\n        <InnerPageTitle title=\"Claim wins\" subtitle=\"Connect your wallet and check you wins\" />\n        <section className=\"tf-section tf-item tf-claim\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className={mobile == false || isWindowEth() ? \"col-md-12 center\" : \"hide\"}>\n                        <button className={isConnected == true ? \"hide\" : \"tf-button btn-effect active\"} onClick={connectWallet}>\n                            <span className=\"boder-fade\"></span>          \n                            <span className=\"effect\"><img src={MetamaskIcon} className=\"metamaskIcon\" />Connect your wallet</span>\n                        </button>                         \n                        <span><strong>{connectionMessage}</strong></span><br />\n                    </div>\n                    <div className={mobile == true && !isWindowEth() ? \"col-md-12 center\" : \"hide\"}>\n                        <a href={Constants.METAMASK_MOBILE_CLAIMURL} className={isConnected == true ? \"hide\" : \"tf-button btn-effect active\"}>\n                            <span className=\"boder-fade\"></span>          \n                            <span className=\"effect\"><img src={MetamaskIcon} className=\"metamaskIcon\" />Open Metamask</span>\n                        </a>                 \n                        <span><strong>{connectionMessage}</strong></span><br />\n                    </div>             \n                </div>  \n                <div className={isConnected ? \"row\" : \"hide\"}>\n                    <div className=\"col-md-12 center\">\n                        <h4>Your C-Shirts</h4>\n                        <div className={isConnected ? \"wallet\" : \"hide\"}>Wallet connected: {walletAddress}</div>\n                        <div className={isConnected && cshirts.length == 0 ? \"claim-container\" : \"hide\"}>\n                            <div className=\"claim-container toUpper nodata\">No C-Shirts found in your wallet</div>\n                            <div>\n                                <Link className=\"tf-button st2 btn-effect\" to=\"/cshirts\">\n                                    <span className=\"boder-fade\"></span>\n                                    <span className=\"effect\">Get a C-Shirt</span>\n                                </Link>\n                            </div>\n                        </div>\n                        <div className={isConnected && cshirts.length > 0 ? \"claim-container\" : \"hide\"}>\n                            \n                        </div>\n                    </div>\n                </div>              \n            </div>\n        </section>\n    </Layout>\n    return(\n        PageLayout\n    );\n};\n\nexport default ClaimPage;"],"names":["provider","mobile","window","ethereum","ethers","match","matchMedia","matches","addListener","connectWallet","useState","walletAddress","setWalletAddress","isConnected","setIsConnected","connectionMessage","setConnectionMessage","cshirts","isWindowEth","send","_context","signer","getSigner","getAddress","address","Constants","message","React","Layout","pageTitle","container","InnerPageTitle","title","subtitle","className","onClick","src","MetamaskIcon","href","length","Link","to"],"sourceRoot":""}