{"version":3,"file":"component---src-pages-tournaments-worldcupqatar-22-index-tsx-7c81f1802cd04a94055a.js","mappings":"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","sources":["webpack://non-fungible-cup/./src/components/tournament/faq.tsx","webpack://non-fungible-cup/./src/components/tournament/scores.tsx","webpack://non-fungible-cup/./src/components/utils/accordion.tsx","webpack://non-fungible-cup/./src/components/utils/inner-page-title.tsx","webpack://non-fungible-cup/./src/model/tournamentpagetype.ts","webpack://non-fungible-cup/./src/pages/tournaments/worldcupqatar22/index.tsx","webpack://non-fungible-cup/./src/templates/tournament.tsx"],"sourcesContent":["import * as React from \"react\";\nimport Accordion from '../utils/accordion';\n\nconst FAQ = () => {\n    var contents = [\n        { title: 'Where can I get the game rules?', content: 'Click on \"Rules\" in the top menu.' },\n        { title: 'How can I earn ETH on a match?', content: 'Get a C-Shirts for this tournament.' },\n        { title: 'How do I get C-Shirts?', content: 'From this website, if minting is open, or from Opensea.' },\n        { title: 'I win! How can I get my award in ETH?', content: 'Click on \"Claim wins\" in the top menu.' }\n    ];\n    return (\n    <section className=\"tf-section faq\">\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-12\">\n                    <div className=\"tf-title m-b60\">\n                        <p className=\"h8 sub-title\">FAQs</p>\n                        <h4 className=\"title\">Looking for answers?</h4>\n                    </div>\n                </div>\n                <div className=\"col-md-12\">\n                    <Accordion items={contents} />\n                </div>\n            </div>\n        </div>\n    </section>\n    );\n};\n\nexport default FAQ;","import React, { useState } from 'react';\nimport {Link} from 'gatsby';\n\nconst Scores = ({id, datasource} : {id:string, datasource:any}) => { \n    const JSONData = datasource;\n    const [currentMatch, setCurrentMatch] = useState();\n\n    function formatMatchDate(datetime:string) {\n        var d = new Date(datetime);\n        return d.toUTCString();\n    };\n\n    function showWinInfo(datetime:string) {\n        var d = new Date(datetime);\n        const today = new Date();\n        return d > today;\n    };\n\n    function showWinners(match:any) {\n        setCurrentMatch(match);\n    };\n\n    const PageLayout = <section className=\"tf-section tf-item nopadding\">\n        <div className=\"container\">\n            <div className=\"tournament-section-header\">\n                <h6>Scores - Week {JSONData.schedules[0].week}</h6>\n            </div>\n            <div className=\"row\">                \n                <div className=\"col-md-12 center\">  \n                    {JSONData.schedules[0].matches.map((match:any, index:number) => (\n                        <div className=\"tf-match\" key={index}>\n                            <div className=\"row\">\n                                <div className=\"col-md-12\">\n                                    <div className=\"matchDateTime\">{formatMatchDate(match.datetime)} UTC</div>\n                                </div>\n                            </div>\n                            <div className=\"match row\">\n                                <div className=\"col-md-5\">\n                                <Link to={\"players/\" + match.homecaptain ? match.homecaptain : \"\"} className=\"matchTeam\"><span>{match.home}</span></Link>\n                                </div>\n                                <div className=\"col-md-2 matchResult\">\n                                    <span className=\"matchScore\">{match.homescore}</span> - <span className=\"matchScore\">{match.outsidescore}</span>\n                                </div>\n                                <div className=\"col-md-5\">\n                                    <Link to={\"players/\" + match.outsidecaptain ? match.outsidecaptain : \"\"} className=\"matchTeam\"><span>{match.outside}</span></Link>\n                                </div>\n                            </div>\n                            <div className={showWinInfo(match.datetime) ? \"row matchInfo\" : \"hide\"}>\n                                <div className=\"col-md-12 center\">\n                                    <Link to=\"/claim\" className={match.homescore != match.outsidescore ? \"tf-button btn-effect\" : \"hide\"}>\n                                        <span className=\"boder-fade\"></span>                                     \n                                        <span className=\"effect\">\n                                            All \"{match.homescore > match.outsidescore ? match.home : match.outside}\" C-Shirts holders can claim their win\n                                        </span>\n                                    </Link>\n                                </div>\n                            </div>                           \n                        </div>\n                    ))}  \n                    <div className={JSONData.schedules[0].matches.length != 0 ? \"hide\": \"\"}>No data available</div>                \n                </div>\n            </div>\n        </div>\n    </section>\n    return(\n        PageLayout\n    );\n};\n\nexport default Scores;\n\n","import React, { useState, useEffect } from 'react';\n\ntype AccordionData = {\n    title: string;\n    content: string;\n};\n\nconst Accordion = ({items} : {items: Array<AccordionData>})  => {\n    const [currentId, setCurrentId] = useState(-1);\n    const onBtnClick = (id: number) => {\n        setCurrentId(id);\n    };\n    return (\n        <div className=\"flat-accordion\">\n            {items.map((item, id) => (\n                <div className={(id === currentId) ? 'flat-toggle box-text corner-box active' : 'flat-toggle box-text corner-box'} onClick={() => onBtnClick(id)} key={id}>\n                    <div className={(id === currentId) ? 'h9 toggle-title active' : 'h9 toggle-title'}>{item.title}</div>\n                    <p className={(id === currentId) ? 'toggle-content show' : 'toggle-content'}>\n                        {item.content}\n                    </p>\n                </div>\n            ))}            \n        </div>\n    );\n};\n\nexport default Accordion;","import * as React from \"react\";\n\nconst InnerPageTitle = ({title, subtitle} : {title: string, subtitle: string})  => {\n    return (\n        <section className=\"page-title\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <div className=\"breadcrumbs\">\n                            <h3>{title}</h3>\n                            <p className=\"sub-title\">{subtitle}</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n    );\n};\n\nexport default InnerPageTitle;\n","enum TournamentPageType {\n    Scores,\n    Rankings,\n    Players\n};\n\nexport default TournamentPageType;","import * as React from \"react\";\nimport Template from '../../../templates/tournament';\nimport TournamentPageType from \"../../../model/tournamentpagetype\";\nimport Scores from \"../../../components/tournament/scores\";\nimport FAQ from \"../../../components/tournament/faq\";\nimport JSONData from '../../../assets/data/scores/worldcupqatar22.json';\n\nconst IndexPage = () => {\n  return (\n    <Template id=\"worldcupqatar22\" name=\"World Cupt Qatar 2022\" description=\"World soccer tournament\" pagetype={TournamentPageType.Scores}>\n      <Scores id=\"worldcupqatar22\" datasource={JSONData} />\n      <FAQ />\n    </Template>\n  )\n}\n\nexport default IndexPage","import React, { useState } from 'react';\nimport Layout from '../components/layout';\nimport InnerPageTitle from '../components/utils/inner-page-title';\nimport Header from '../components/tournament/header';\nimport TournamentPage from '../model/tournamentpage';\n\nconst TournamentPageTemplate = ({id, name, description, pagetype, children} : TournamentPage) => { \n    const PageLayout = process.env.NODE_ENV !== \"development\" ? null : \n    <Layout pageTitle={\"Non Fungible Cup: \" + name} container=\"inner-page\">\n        <InnerPageTitle title={name} subtitle={description} />\n        <section className=\"tf-section tf-item\">\n            <div className=\"container\">\n                <Header id={id} pagetype={pagetype} />\n            </div>\n        </section>\n        <section className=\"tf-section tf-item\">\n            <div className=\"container\">\n                {children}\n            </div>\n        </section>\n    </Layout>\n    return(\n        PageLayout\n    );\n};\n\nexport default TournamentPageTemplate;"],"names":["React","className","Accordion","items","title","content","id","JSONData","datasource","useState","showWinInfo","datetime","Date","schedules","week","matches","map","match","index","key","toUTCString","Link","to","homecaptain","home","homescore","outsidescore","outsidecaptain","outside","length","currentId","setCurrentId","item","onClick","onBtnClick","subtitle","TournamentPageType","Template","name","description","pagetype","Scores","FAQ","children"],"sourceRoot":""}